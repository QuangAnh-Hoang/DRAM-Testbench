=== Generated schedule for mkDRAM_tb ===

Rule schedule
-------------
Rule: dut_incCycle
Predicate: True
Blocking rules: (none)
 
Rule: dut_decodeCommand
Predicate: ((dut_stallCycles == 32'd0)
	    ? (! dut_instQ.notEmpty) ||
	      (dut_instQ.i_notEmpty &&
	       ((dut_instQ.first[18:14] == 5'b1111)
		? dut_commandQ.i_notFull
		: (((dut_instQ.first[18:17] == 2'b0) ||
		    (dut_instQ.first[18:14] == 5'b1101) ||
		    (dut_instQ.first[18:14] == 5'b1100))
		   ? dut_commandQ.i_notFull && dut_addrQ.i_notFull
		   : ((! (dut_instQ.first[18:14] == 5'b1010)) ||
		      dut_commandQ.i_notFull))))
	    : dut_commandQ.i_notFull) &&
	   dut_kernelStarted && (! dut_kernelDone)
Blocking rules: (none)
 
Rule: dut_processCommand
Predicate: ((! dut_commandQ.notEmpty) || dut_commandQ.i_notEmpty) &&
	   ((! dut_addrQ.notEmpty) || dut_addrQ.i_notEmpty) &&
	   ((! (dut_currCommand == 4'd15)) ||
	    (dut_currState == 3'd1) ||
	    ((dut_currState == 3'd3)
	     ? (! (dut_burstCounter < 14'd4)) || dut_outputDataBuff.i_notFull
	     : ((! (dut_currState == 3'd4)) ||
		(! (dut_burstCounter < 14'd4)) ||
		(! dut_inputDataQ.notEmpty) || dut_inputDataQ.i_notEmpty))) &&
	   dut_kernelStarted && (! dut_kernelDone)
Blocking rules: dut_decodeCommand
 
Rule: start_reg__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: state_handle_abort
Predicate: abort.whas && abort.wget &&
	   ((! start_wire.whas) || (! start_wire.wget))
Blocking rules: (none)
 
Rule: state_fired__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: state_every
Predicate: True
Blocking rules: (none)
 
Rule: restart
Predicate: start_reg_1 && (! state_fired) &&
	   ((! abort.whas) || (! abort.wget))
Blocking rules: (none)
 
Rule: action_l13c9
Predicate: start_wire.whas && start_wire.wget &&
	   ((abort.whas && abort.wget) || (state_mkFSMstate.read == 4'd0) ||
	    (state_mkFSMstate.read == 4'd13))
Blocking rules: (none)
 
Rule: action_l16c9
Predicate: dut_instQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd1)
Blocking rules: (none)
 
Rule: action_l22c9
Predicate: dut_instQ.i_notFull && dut_inputDataQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd2)
Blocking rules: (none)
 
Rule: action_l29c9
Predicate: dut_inputDataQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd3)
Blocking rules: (none)
 
Rule: action_l33c9
Predicate: dut_inputDataQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd4)
Blocking rules: (none)
 
Rule: action_l37c9
Predicate: dut_inputDataQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd5)
Blocking rules: (none)
 
Rule: action_np
Predicate: ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd6)
Blocking rules: (none)
 
Rule: action_l41c9
Predicate: dut_instQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd7)
Blocking rules: (none)
 
Rule: action_l46c9
Predicate: dut_outputDataBuff.i_notEmpty &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd8)
Blocking rules: (none)
 
Rule: action_l49c9
Predicate: dut_outputDataBuff.i_notEmpty &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd9)
Blocking rules: (none)
 
Rule: action_l52c9
Predicate: dut_outputDataBuff.i_notEmpty &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd10)
Blocking rules: (none)
 
Rule: action_l55c9
Predicate: dut_outputDataBuff.i_notEmpty &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd11)
Blocking rules: (none)
 
Rule: action_l59c9
Predicate: dut_instQ.i_notFull &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd12)
Blocking rules: (none)
 
Rule: idle_l12c6
Predicate: ((! start_wire.whas) || (! start_wire.wget)) &&
	   ((! abort.whas) || (! abort.wget)) &&
	   (state_mkFSMstate.read == 4'd13)
Blocking rules: (none)
 
Rule: fsm_start
Predicate: ((abort.whas && abort.wget) || (state_mkFSMstate.read == 4'd0) ||
	    (state_mkFSMstate.read == 4'd13)) &&
	   ((! start_reg_1) || state_fired) &&
	   start_reg
Blocking rules: (none)
 
Rule: auto_start
Predicate: ((abort.whas && abort.wget) || (state_mkFSMstate.read == 4'd0) ||
	    (state_mkFSMstate.read == 4'd13)) &&
	   ((! start_reg_1) || state_fired) &&
	   (! start_reg) &&
	   (! running)
Blocking rules: (none)
 
Rule: auto_finish
Predicate: running &&
	   ((abort.whas && abort.wget) || (state_mkFSMstate.read == 4'd0) ||
	    (state_mkFSMstate.read == 4'd13)) &&
	   ((! start_reg_1) || state_fired) &&
	   (! start_reg)
Blocking rules: (none)
 
Rule: __me_check_8
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_9
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_10
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_11
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_12
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_13
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_14
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_15
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_16
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_17
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_18
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_19
Predicate: True
Blocking rules: (none)
 
Logical execution order: restart,
			 action_np,
			 action_l46c9,
			 action_l49c9,
			 action_l52c9,
			 action_l55c9,
			 fsm_start,
			 idle_l12c6,
			 auto_start,
			 auto_finish,
			 dut_decodeCommand,
			 action_l16c9,
			 action_l41c9,
			 action_l59c9,
			 __me_check_14,
			 __me_check_15,
			 __me_check_16,
			 __me_check_17,
			 __me_check_18,
			 __me_check_19,
			 dut_incCycle,
			 dut_processCommand,
			 action_l13c9,
			 action_l22c9,
			 action_l29c9,
			 action_l33c9,
			 action_l37c9,
			 __me_check_8,
			 __me_check_9,
			 __me_check_10,
			 __me_check_11,
			 __me_check_13,
			 __me_check_12,
			 start_reg__dreg_update,
			 state_handle_abort,
			 state_every,
			 state_fired__dreg_update

=========================================
